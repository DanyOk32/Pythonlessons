"""
1) написати прогу, яка вибирає зі введеної строки цифри і виводить їх через кому,
#
# наприклад:
#
# st = ‘as 23 fdfdg544’ введена строка
#
# 2,3,5,4,4        #вивело в консолі.
"""


###########################################################
st = 'as 12 fsad124 4124dsf 1234f'
result1 =[j for j in st if j.isdigit()]
print(', '.join(result1))
###########################################################
"""
2)написати прогу, яка вибирає зі введеної строки числа і виводить їх так, як вони написані

наприклад:

  st = ‘as 23 fdfdg544 34’ #введена строка

  23, 544, 34              #вивело в консолі

"""
###########################################################
def progrl1(string_ex):
    result2 = []
    number = ''
    for i in string_ex:
        if i.isdigit():
            number += i
        else:
            if number:
                result2.append(number)
                number = ''
    if number:
        result2.append(number)
    print(', '.join(result2))
    # print(sum(int(k) for k in result2))



st = 'as 23 fdfdg544 34'
# print(', '.join(''.join([ch if ch.isdigit() else ' ' for ch in st]).split()))
# print(''.join([ch if ch.isdigit() else ' ' for ch in st]).split())
progrl1(st)

###########################################################
'''1) є
строка:

greeting = ‘Hello, world’

записати кожний символ, як окремий елемент списку, і зробити його заглавним:

[‘H’, ‘E’, ‘L’, ‘L’, ‘O’, ‘, ’, ‘ ‘, ‘W’, ‘O’, ‘R’, ‘L’, ‘D’]'''
###########################################################
greeting = 'Hello, world'
print([k.upper() for k in greeting])
###########################################################
'''2) з діапазону від 0-50 записати тільки непарні числа, при цьому піднести їх до квадрату

приклад:

[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, …]'''
###########################################################
print([i**2 for i in range(50) if i%2==0])
# print([i for i in range(10, 101) if i%2==1 and i*2%5==0])


###########################################################

